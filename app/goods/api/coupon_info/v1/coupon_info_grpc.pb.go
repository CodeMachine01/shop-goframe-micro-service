// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v6.31.1
// source: coupon_info/v1/coupon_info.proto

package v1

import (
	context "context"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	CouponInfo_GetList_FullMethodName = "/coupon_info.coupon_info/GetList"
	CouponInfo_Create_FullMethodName  = "/coupon_info.coupon_info/Create"
	CouponInfo_Update_FullMethodName  = "/coupon_info.coupon_info/Update"
	CouponInfo_Delete_FullMethodName  = "/coupon_info.coupon_info/Delete"
)

// CouponInfoClient is the client API for CouponInfo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CouponInfoClient interface {
	GetList(ctx context.Context, in *CouponInfoGetListReq, opts ...grpc.CallOption) (*CouponInfoGetListRes, error)
	Create(ctx context.Context, in *CouponInfoCreateReq, opts ...grpc.CallOption) (*CouponInfoCreateRes, error)
	Update(ctx context.Context, in *CouponInfoUpdateReq, opts ...grpc.CallOption) (*CouponInfoUpdateRes, error)
	Delete(ctx context.Context, in *CouponInfoDeleteReq, opts ...grpc.CallOption) (*CouponInfoDeleteRes, error)
}

type couponInfoClient struct {
	cc grpc.ClientConnInterface
}

func NewCouponInfoClient(cc grpc.ClientConnInterface) CouponInfoClient {
	return &couponInfoClient{cc}
}

func (c *couponInfoClient) GetList(ctx context.Context, in *CouponInfoGetListReq, opts ...grpc.CallOption) (*CouponInfoGetListRes, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CouponInfoGetListRes)
	err := c.cc.Invoke(ctx, CouponInfo_GetList_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponInfoClient) Create(ctx context.Context, in *CouponInfoCreateReq, opts ...grpc.CallOption) (*CouponInfoCreateRes, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CouponInfoCreateRes)
	err := c.cc.Invoke(ctx, CouponInfo_Create_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponInfoClient) Update(ctx context.Context, in *CouponInfoUpdateReq, opts ...grpc.CallOption) (*CouponInfoUpdateRes, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CouponInfoUpdateRes)
	err := c.cc.Invoke(ctx, CouponInfo_Update_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponInfoClient) Delete(ctx context.Context, in *CouponInfoDeleteReq, opts ...grpc.CallOption) (*CouponInfoDeleteRes, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CouponInfoDeleteRes)
	err := c.cc.Invoke(ctx, CouponInfo_Delete_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CouponInfoServer is the server API for CouponInfo service.
// All implementations must embed UnimplementedCouponInfoServer
// for forward compatibility.
type CouponInfoServer interface {
	GetList(context.Context, *CouponInfoGetListReq) (*CouponInfoGetListRes, error)
	Create(context.Context, *CouponInfoCreateReq) (*CouponInfoCreateRes, error)
	Update(context.Context, *CouponInfoUpdateReq) (*CouponInfoUpdateRes, error)
	Delete(context.Context, *CouponInfoDeleteReq) (*CouponInfoDeleteRes, error)
	mustEmbedUnimplementedCouponInfoServer()
}

// UnimplementedCouponInfoServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedCouponInfoServer struct{}

func (UnimplementedCouponInfoServer) GetList(context.Context, *CouponInfoGetListReq) (*CouponInfoGetListRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetList not implemented")
}
func (UnimplementedCouponInfoServer) Create(context.Context, *CouponInfoCreateReq) (*CouponInfoCreateRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (UnimplementedCouponInfoServer) Update(context.Context, *CouponInfoUpdateReq) (*CouponInfoUpdateRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (UnimplementedCouponInfoServer) Delete(context.Context, *CouponInfoDeleteReq) (*CouponInfoDeleteRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (UnimplementedCouponInfoServer) mustEmbedUnimplementedCouponInfoServer() {}
func (UnimplementedCouponInfoServer) testEmbeddedByValue()                    {}

// UnsafeCouponInfoServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CouponInfoServer will
// result in compilation errors.
type UnsafeCouponInfoServer interface {
	mustEmbedUnimplementedCouponInfoServer()
}

func RegisterCouponInfoServer(s grpc.ServiceRegistrar, srv CouponInfoServer) {
	// If the following call pancis, it indicates UnimplementedCouponInfoServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&CouponInfo_ServiceDesc, srv)
}

func _CouponInfo_GetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CouponInfoGetListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponInfoServer).GetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponInfo_GetList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponInfoServer).GetList(ctx, req.(*CouponInfoGetListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponInfo_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CouponInfoCreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponInfoServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponInfo_Create_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponInfoServer).Create(ctx, req.(*CouponInfoCreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponInfo_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CouponInfoUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponInfoServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponInfo_Update_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponInfoServer).Update(ctx, req.(*CouponInfoUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponInfo_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CouponInfoDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponInfoServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponInfo_Delete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponInfoServer).Delete(ctx, req.(*CouponInfoDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

// CouponInfo_ServiceDesc is the grpc.ServiceDesc for CouponInfo service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CouponInfo_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "coupon_info.coupon_info",
	HandlerType: (*CouponInfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetList",
			Handler:    _CouponInfo_GetList_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _CouponInfo_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _CouponInfo_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _CouponInfo_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "coupon_info/v1/coupon_info.proto",
}
